<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- Generated 16-dic-2014 9:35:11 by Hibernate Tools 4.3.1 -->
<hibernate-mapping>
    <class name="entities.Movilidad" table="movilidad" catalog="gestordb" optimistic-lock="version">
        <id name="codMovilidad" type="java.lang.Integer">
            <column name="codMovilidad" />
            <generator class="identity" />
        </id>
        <many-to-one name="cursoacademico" class="entities.Cursoacademico" fetch="select">
            <column name="cursoAcademico" length="10" />
        </many-to-one>
        <many-to-one name="universidad" class="entities.Universidad" lazy="false" fetch="select">
            <column name="nombreUniversidad" length="200" not-null="true" />
        </many-to-one>
        <many-to-one name="usuario" class="entities.Usuario" fetch="select" lazy="false">
            <column name="loginUsuario" length="50" not-null="true" />
        </many-to-one>
        <property name="fechaInicio" type="timestamp">
            <column name="fechaInicio" length="19" not-null="true" />
        </property>
        <property name="fechaFin" type="timestamp">
            <column name="fechaFin" length="19" not-null="true" />
        </property>
        <property name="estado" type="string">
            <column name="estado" length="10" not-null="true" />
        </property>
        <set name="contratos" table="contrato" cascade="delete" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="idMovilidad" />
            </key>
            <one-to-many class="entities.Contrato" />
        </set>
        <filter name="cursoAcademico" condition="cursoAcademico=:cursoAcademicoParam"/>
        <filter name="universidad" condition="nombreUniversidad like '%' :universidadParam '%'"/>
        <filter name="estado" condition="estado=:estadoParam"/>
        <filter name="login" condition="loginUsuario like '%' :loginParam '%'"/>
        <filter name="pais" condition="nombreUniversidad in (select u.nombre from Universidad u where u.pais like :paisParam '%')"/>
        
        
    </class>
    <filter-def name="cursoAcademico">
        <filter-param name="cursoAcademicoParam" type="string"/>
    </filter-def>
    <filter-def name="universidad">
        <filter-param name="universidadParam" type="string"/>
    </filter-def>
    <filter-def name="estado">
        <filter-param name="estadoParam" type="string"/>
    </filter-def>
    <filter-def name="login">
        <filter-param name="loginParam" type="string"/>
    </filter-def>
    <filter-def name="pais">
        <filter-param name="paisParam" type="string"/>
    </filter-def>
    
    
</hibernate-mapping>