package entities;
// Generated 09-mar-2015 20:16:39 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Configuracion generated by hbm2java
 */
@Entity
@Table(name="configuracion"
    ,catalog="gestordb"
)
public class Configuracion  implements java.io.Serializable {


     private Short id;
     private String direccion;
     private String password;
     private Short smtpPort;
     private String hostName;
     private String addTo;
     private Boolean permitirAlumnos;
     private Boolean permitirAlumnosDestino;
     private Boolean cargarTodasMovilidades;
     private String direccionAdmin;
     private Boolean permitirCopia;
     private Boolean notificarAsignaturas;
     private Boolean cargarTodosContratos;
     private Set<Direccion> direccions = new HashSet<Direccion>(0);
    public Configuracion() {
    }

    public Configuracion(String direccion, String password, Short smtpPort, String hostName, String addTo, Boolean permitirAlumnos,Boolean permitirAlumnosDestino,Boolean cargarTodasMovilidades, String direccionAdmin,Boolean permitirCopia,Boolean notificarAsignaturas,Boolean cargarTodosContratos,Set<Direccion> direccions) {
       this.direccion = direccion;
       this.password = password;
       this.smtpPort = smtpPort;
       this.hostName = hostName;
       this.addTo = addTo;
       this.permitirAlumnos = permitirAlumnos;
       this.permitirAlumnosDestino=permitirAlumnosDestino;
       this.cargarTodasMovilidades=cargarTodasMovilidades;
       this.direccionAdmin=direccionAdmin;
       this.permitirCopia = permitirCopia;
       this.notificarAsignaturas=notificarAsignaturas;
       this.cargarTodosContratos=cargarTodosContratos;
       this.direccions = direccions;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Short getId() {
        return this.id;
    }
    
    public void setId(Short id) {
        this.id = id;
    }

    
    @Column(name="direccion", length=500)
    public String getDireccion() {
        return this.direccion;
    }
    
    public void setDireccion(String direccion) {
        this.direccion = direccion;
    }

    
    @Column(name="password", length=50)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    
    @Column(name="smtpPort")
    public Short getSmtpPort() {
        return this.smtpPort;
    }
    
    public void setSmtpPort(Short smtpPort) {
        this.smtpPort = smtpPort;
    }

    
    @Column(name="hostName", length=500)
    public String getHostName() {
        return this.hostName;
    }
    
    public void setHostName(String hostName) {
        this.hostName = hostName;
    }

    
    @Column(name="addTo", length=500)
    public String getAddTo() {
        return this.addTo;
    }
    
    public void setAddTo(String addTo) {
        this.addTo = addTo;
    }

    
    @Column(name="permitirAlumnos")
    public Boolean getPermitirAlumnos() {
        return this.permitirAlumnos;
    }
    
    public void setPermitirAlumnos(Boolean permitirAlumnos) {
        this.permitirAlumnos = permitirAlumnos;
    }

    
     @Column(name="permitirAlumnosDestino")
    public Boolean getPermitirAlumnosDestino() {
        return this.permitirAlumnosDestino;
    }
    
    public void setPermitirAlumnosDestino(Boolean permitirAlumnosDestino) {
        this.permitirAlumnosDestino = permitirAlumnosDestino;
    }

    @Column(name="cargarTodasMovilidades")
    public Boolean getCargarTodasMovilidades() {
        return this.cargarTodasMovilidades;
    }
    
    public void setCargarTodasMovilidades(Boolean cargarTodasMovilidades) {
        this.cargarTodasMovilidades = cargarTodasMovilidades;
    }

    
    @Column(name="direccionAdmin", length=500)
    public String getDireccionAdmin() {
        return this.direccionAdmin;
    }
    
    public void setDireccionAdmin(String direccionAdmin) {
        this.direccionAdmin = direccionAdmin;
    }
    
     @Column(name="permitirCopia")
    public Boolean getPermitirCopia() {
        return this.permitirCopia;
    }
    
    public void setPermitirCopia(Boolean permitirCopia) {
        this.permitirCopia = permitirCopia;
    }
    
    @Column(name="notificarAsignaturas")
    public Boolean getNotificarAsignaturas() {
        return this.notificarAsignaturas;
    }
    
    
    
    public void setNotificarAsignaturas(Boolean notificarAsignaturas) {
        this.notificarAsignaturas = notificarAsignaturas;
    }
    
    @Column(name="cargarTodosContratos")
    public Boolean getCargarTodosContratos() {
        return this.cargarTodosContratos;
    }
    
    
    
    public void setCargarTodosContratos(Boolean cargarTodosContratos) {
        this.cargarTodosContratos = cargarTodosContratos;
    }
    
    @OneToMany(fetch=FetchType.EAGER, mappedBy="configuracion")
    public Set<Direccion> getDireccions() {
        return this.direccions;
    }
    
    public void setDireccions(Set<Direccion> direccions) {
        this.direccions = direccions;
    }

    


}


