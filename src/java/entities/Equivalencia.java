package entities;
// Generated 16-dic-2014 9:35:09 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Objects;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Equivalencia generated by hbm2java
 */
@Entity
@Table(name="equivalencia"
    ,catalog="gestordb"
)
public class Equivalencia  implements java.io.Serializable {


     private Integer idequivalencia;
     private boolean visible;
     private Set<MiembroGrupoAsignaturaB> miembroGrupoAsignaturaBs = new HashSet<MiembroGrupoAsignaturaB>(0);
     private Set<MiembroGrupoAsignaturaA> miembroGrupoAsignaturaAs = new HashSet<MiembroGrupoAsignaturaA>(0);
     private Set<Contrato> contratos = new HashSet<Contrato>(0);

    public Equivalencia() {
    }

    public Equivalencia(boolean visible, Set<MiembroGrupoAsignaturaB> miembroGrupoAsignaturaBs, Set<MiembroGrupoAsignaturaA> miembroGrupoAsignaturaAs, Set<Contrato> contratos) {
       this.visible = visible;
       this.miembroGrupoAsignaturaBs = miembroGrupoAsignaturaBs;
       this.miembroGrupoAsignaturaAs = miembroGrupoAsignaturaAs;
       this.contratos = contratos;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idequivalencia", unique=true, nullable=false)
    public Integer getIdequivalencia() {
        return this.idequivalencia;
    }
    
    public void setIdequivalencia(Integer idequivalencia) {
        this.idequivalencia = idequivalencia;
    }

    
    @Column(name="visible", length=2)
    public boolean getVisible() {
        return this.visible;
    }
    
    public void setVisible(boolean visible) {
        this.visible = visible;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="equivalencia")
    public Set<MiembroGrupoAsignaturaB> getMiembroGrupoAsignaturaBs() {
        return this.miembroGrupoAsignaturaBs;
    }
    
    public void setMiembroGrupoAsignaturaBs(Set<MiembroGrupoAsignaturaB> miembroGrupoAsignaturaBs) {
        this.miembroGrupoAsignaturaBs = miembroGrupoAsignaturaBs;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="equivalencia")
    public Set<MiembroGrupoAsignaturaA> getMiembroGrupoAsignaturaAs() {
        return this.miembroGrupoAsignaturaAs;
    }
    
    public void setMiembroGrupoAsignaturaAs(Set<MiembroGrupoAsignaturaA> miembroGrupoAsignaturaAs) {
        this.miembroGrupoAsignaturaAs = miembroGrupoAsignaturaAs;
    }

@ManyToMany(fetch=FetchType.LAZY, mappedBy="equivalencias")
    public Set<Contrato> getContratos() {
        return this.contratos;
    }
    
    public void setContratos(Set<Contrato> contratos) {
        this.contratos = contratos;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 61 * hash + Objects.hashCode(this.idequivalencia);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Equivalencia other = (Equivalencia) obj;
        if (!Objects.equals(this.idequivalencia, other.idequivalencia)) {
            return false;
        }
        return true;
    }




}

